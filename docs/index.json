[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "Reconstructive/.external-ecmascript.js",
    "static": true,
    "longname": "Reconstructive/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "Reconstructive/.external-webapi.js",
    "static": true,
    "longname": "Reconstructive/.external-webapi.js~CanvasRenderingContext2D",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "Reconstructive/.external-webapi.js",
    "static": true,
    "longname": "Reconstructive/.external-webapi.js~DocumentFragment",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "Reconstructive/.external-webapi.js",
    "static": true,
    "longname": "Reconstructive/.external-webapi.js~Element",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "Reconstructive/.external-webapi.js",
    "static": true,
    "longname": "Reconstructive/.external-webapi.js~Event",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "Reconstructive/.external-webapi.js",
    "static": true,
    "longname": "Reconstructive/.external-webapi.js~Node",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "Reconstructive/.external-webapi.js",
    "static": true,
    "longname": "Reconstructive/.external-webapi.js~NodeList",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "Reconstructive/.external-webapi.js",
    "static": true,
    "longname": "Reconstructive/.external-webapi.js~XMLHttpRequest",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "Reconstructive/.external-webapi.js",
    "static": true,
    "longname": "Reconstructive/.external-webapi.js~AudioContext",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "Reconstructive/reconstructive-banner.js",
    "content": "class ReconstructiveBanner extends HTMLElement {\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({mode: 'closed'});\n  }\n\n  connectedCallback() {\n    this.urir = this.getAttribute('urir');\n    this.datetime = this.getAttribute('datetime');\n    console.log(this.urir);\n    let template = `\n      <style>\n        div#reconstructive-banner-aligner {\n          width: 100%;\n          position: fixed;\n          bottom: 0;\n          transition: opacity 0.5s ease-in;\n        }\n        div.hidden {\n          opacity: 0;\n          transition: opacity 0.5s ease-in;\n        }\n        div#reconstructive-banner-container {\n          max-width: 500px;\n          height: 60px;\n          border: 2px solid #FF8B00;\n          background-color: #F2FFE3;\n          border-radius: 5px;\n          color: #1B4869;\n          margin: 10px auto;\n          padding: 5px;\n          display: grid;\n          grid-gap: 5px;\n          box-shadow: 0 0 10px;\n        }\n        input {\n          padding: 3px;\n          box-sizing:border-box;\n        }\n        input.urir {\n          grid-column: 1 / 3;\n          grid-row: 1;\n        }\n        p.label {\n          grid-column: 1;\n          grid-row: 2;\n          margin: 0;\n        }\n        input.datetime {\n          grid-column: 2;\n          grid-row: 2;\n        }\n      </style>\n      <div id=\"reconstructive-banner-aligner\" class=\"\">\n        <div id=\"reconstructive-banner-container\">\n          <input class=\"urir\" value=\"${this.urir}\">\n          <p class=\"label\">Archived at:</p>\n          <input class=\"datetime\" value=\"${this.datetime}\">\n        </div>\n      </div>\n    `;\n    this.shadow.innerHTML = template;\n\n    let container = this.shadow.getElementById('reconstructive-banner-container');\n    this.focused = false;\n    container.onmouseover = () => this.focused = true;\n    container.onmouseout = () => this.focused = false;\n    let aligner = this.shadow.getElementById('reconstructive-banner-aligner');\n    let t;\n    let resetTimer = () => {\n      aligner.classList.remove('hidden');\n      clearTimeout(t);\n      t = setTimeout(() => !this.focused && aligner.classList.add('hidden'), 2000);\n    }\n    window.addEventListener('load', resetTimer);\n    window.addEventListener('mousemove', resetTimer);\n    window.addEventListener('mousedown', resetTimer);\n    window.addEventListener('click', resetTimer);\n    window.addEventListener('scroll', resetTimer);\n    window.addEventListener('keypress', resetTimer);\n  }\n}\n\ncustomElements.define('reconstructive-banner', ReconstructiveBanner);\n",
    "static": true,
    "longname": "/src/Reconstructive/reconstructive-banner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "ReconstructiveBanner",
    "memberof": "Reconstructive/reconstructive-banner.js",
    "static": true,
    "longname": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner",
    "access": "public",
    "export": false,
    "importPath": "Reconstructive/Reconstructive/reconstructive-banner.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "HTMLElement"
    ]
  },
  {
    "__docId__": 59,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "shadow",
    "memberof": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner",
    "static": false,
    "longname": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner#shadow",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "connectedCallback",
    "memberof": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner#connectedCallback",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "urir",
    "memberof": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner",
    "static": false,
    "longname": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner#urir",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "datetime",
    "memberof": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner",
    "static": false,
    "longname": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner#datetime",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "focused",
    "memberof": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner",
    "static": false,
    "longname": "Reconstructive/reconstructive-banner.js~ReconstructiveBanner#focused",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "Reconstructive/reconstructive.js",
    "content": "/**\n * [Reconstructive](https://github.com/oduwsdl/reconstructive) is a ServiceWorker module for client-side reconstruction of composite mementos.\n * It reroutes embedded resource requests to their appropriate archival version without any URL rewriting.\n * It also provides functionality to add custom archival banners or rewrite hyperlinks on the client-side.\n *\n * @overview  Reconstructive is a module to be used in a ServiceWorker of an archival replay.\n * @author    Sawood Alam <ibnesayeed@gmail.com>\n * @version   0.5.0\n * @license   MIT\n * @copyright ODU Web Science / Digital Libraries Research Group 2017\n */\nclass Reconstructive {\n  /**\n   * Creates a new Reconstructive instance with optional configurations.\n   * \n   * @param {{id: string, urimPattern: string, bannerElementLocation: string, showBanner: boolean, debug: boolean}} [config] - Configuration options\n   */\n  constructor(config) {\n    /**\n     * Name of the module.\n     * Treated as a constant.\n     * \n     * @type {string}\n     */\n    this.NAME = 'Reconstructive';\n\n    /**\n     * Version of the module.\n     * Treated as a constant.\n     * \n     * @type {string}\n     */\n    this.VERSION = '0.5.0';\n\n    /**\n     * Identifier of the module, sent to the server as X-ServiceWorker header.\n     * Defaults to the name and version of the module.\n     *\n     * @type {string}\n     */\n    this.id = `${this.NAME}:${this.VERSION}`;\n\n    /**\n     * The format of URI-Ms (e.g., http://example.com/archive/<datetime>/<urir>).\n     *\n     * @type {string}\n     */\n    this.urimPattern = `${self.location.origin}/memento/<datetime>/<urir>`;\n\n    /**\n     * The URL or absolute path of the JS file that defines custom banner element.\n     * Only necessary if showBanner is set to true.\n     *\n     * @type {string}\n     */\n    this.bannerElementLocation = `${self.location.origin}/reconstructive-banner.js`;\n\n    /**\n     * Whether or not to show an archival banner.\n     * Defaults to false.\n     *\n     * @type {boolean}\n     */\n    this.showBanner = false;\n\n    /**\n     * Whether or not to show debug messages in the console.\n     * Defaults to false.\n     *\n     * @type {boolean}\n     */\n    this.debug = false;\n\n    // Iterate over the supplied configuration object to overwrite defaults and add new properties\n    if (config instanceof Object) {\n      for (const [k, v] of Object.entries(config)) {\n        /** @ignore **/\n        this[k] = v;\n      }\n    }\n\n    /**\n     * A private object with varius RegExp properties (possibly derived from other properties) for internal use.\n     * \n     * @private\n     * @type    {{urimPattern: RegExp, absoluteReference: RegExp, bodyEnd: RegExp}}\n     */\n    this._regexps = {\n      urimPattern: new RegExp(`^${this.urimPattern.replace('<datetime>', '(\\\\d{14})').replace('<urir>', '(.*)')}$`),\n      absoluteReference: new RegExp(`(<(iframe|a).*?\\\\s+(src|href)\\\\s*=\\\\s*[\"']?)(https?:\\/\\/[^'\"\\\\s]+)(.*?>)`, 'ig'),\n      bodyEnd: new RegExp('<\\/(body|html)>', 'i')\n    };\n\n    /**\n     * An object of functions to check whether the request should be excluded from being rerouted.\n     * Add more members to the object to add more exclusions or modify/delete existing ones.\n     * The property name can be anything descriptive of the particular exclusion, which will be shown in debug logs.\n     * Each member function is called with the fetch event as parameters.\n     * If any member returns true, the fetch event is excluded from being rerouted.\n     *\n     * @type {{notGet: function(event: FetchEvent): boolean, bannerElement: function(event: FetchEvent): boolean, localResource: function(event: FetchEvent): boolean}}\n     */\n    this.exclusions = {\n      notGet: event => event.request.method !== 'GET',\n      bannerElement: event => this.showBanner && event.request.url.endsWith(this.bannerElementLocation),\n      localResource: event => !(this._regexps.urimPattern.test(event.request.url) || this._regexps.urimPattern.test(event.request.referrer))\n    };\n\n    this.debug && console.log(`${this.NAME}:${this.VERSION} initialized:`, this);\n\n    this.fetchFailure = this.fetchFailure.bind(this)\n  }\n\n  /**\n   * Iterates over all the members of the exclusions object and returns true if any of the members return true, otherwise returns false.\n   * Logs the first matching exclusion for debugging, if any.\n   *\n   * @param  {FetchEvent} event - The fetch event\n   * @return {boolean}          - Should the request be rerouted?\n   */\n  shouldExclude(event) {\n    return Object.entries(this.exclusions).some(([exclusionName, exclusionFun]) => {\n      if (exclusionFun(event)) {\n        this.debug && console.log('Exclusion found:', exclusionName, event.request.url);\n        return true\n      }\n      return false\n    })\n  }\n\n  /**\n   * Creates a potential URI-M based on the requested URL and the referrer URL for request rerouting.\n   *\n   * @param  {FetchEvent} event - The fetch event\n   * @return {string}           - A potential URI-M\n   */\n  createUrim(event) {\n    // Extract datetime and the URI-R of the referrer.\n    let [datetime, refUrir] = this.extractDatetimeUrir(event.request.referrer);\n    let urir = new URL(event.request.url);\n    // This condition will match when the request was initiated from an absolute path and fail if it was an absolute URL.\n    if (urir.origin === self.location.origin) {\n      // If it was an absolute path then referrer's origin was used.\n      // We need to replace it with the origin of the referrer's URI-R instead.\n      // The RegExp used will capture the origin with the protocol, if any (http, https, or BLANK).\n      let refOrigin = refUrir.match(/^(https?:\\/\\/)?[^\\/]+/)[0];\n      urir = refOrigin + urir.pathname + urir.search;\n    } else {\n      urir = urir.href;\n    }\n    return this.urimPattern.replace('<datetime>', datetime).replace('<urir>', urir);\n  }\n\n  /**\n   * Extracts datetime and URI-R from a URI-M.\n   *\n   * @param  {string}   urim - A URI-M\n   * @return {string[]}      - An array of datetime and URI-R\n   */\n  extractDatetimeUrir(urim) {\n    let [, datetime, urir] = urim.match(this._regexps.urimPattern);\n    // Swap the two extracted values if the datetime pattern appeared after the URI-R.\n    // This is not a common practice, but possible if an archive uses query parameters instead of paths.\n    if (isNaN(datetime)) {\n      return [urir, datetime];\n    }\n    return [datetime, urir];\n  }\n\n  /**\n   * Creates a new request based on the original.\n   * Copies all the headers from the original request.\n   * Adds X-ServiceWorker header with the id of the module.\n   * Sets the redirect mode to manual to ensure proper origin boundaries.\n   *\n   * @param  {FetchEvent} event - The fetch event\n   * @return {Request}          - A new request object\n   */\n  createRequest(event) {\n    let headers = this.cloneHeaders(event.request.headers);\n    headers.set('X-ServiceWorker', this.id);\n    return new Request(event.request.url, {headers: headers, redirect: 'manual'});\n  }\n\n  /**\n   * Clones provided request or response headers.\n   *\n   * @param  {Headers} original - Original request or response headers\n   * @return {Headers}          - A clone of the supplied headers\n   */\n  cloneHeaders(original) {\n    let headers = new Headers();\n    for (const [k, v] of original.entries()) {\n      headers.append(k, v);\n    }\n    return headers;\n  }\n\n  /**\n   * Redirects a non-URI-M request to its potentially URI-M locally.\n   * The potential URI-M is generated using createUrim().\n   * This function only returns a synthetic redirection response.\n   *\n   * @param  {string}            urim - A potential URI-M\n   * @return {Promise<Response>}      - A 302 redirection response to the potential URI-M\n   */\n  localRedirect(urim) {\n    this.debug && console.log('Locally redirecting to:', urim);\n    return Promise.resolve(new Response(`<h1>Locally Redirecting</h1><p>${urim}</p>`, {\n      status: 302,\n      statusText: 'Found',\n      headers: new Headers({\n        'Location': urim,\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'text/html'\n      })\n    }));\n  }\n\n  /**\n   * The callback function on a successful fetch from the server.\n   * Calls the rewrite() function if the response code is 2xx.\n   * Logs the response for debugging.\n   * Resolves to a potentially modified response.\n   *\n   * @param  {Response}          response - Original response object\n   * @param  {FetchEvent}        event    - The fetch event\n   * @return {Promise<Response>}          - Potentially modified response\n   */\n  fetchSuccess(response, event) {\n    this.debug && console.log('Fetched from server:', response);\n    // Perform a potential rewrite only if the response code is 2xx.\n    if (response.ok) {\n      return this.rewrite(response, event);\n    }\n    return Promise.resolve(response);\n  }\n\n  /**\n   * The callback function on network failure of the server fetch.\n   * Logs the failure reason for debugging.\n   * Returns a synthetic 503 Service Unavailable response.\n   *\n   * @param  {Error}    error - The exception raised on fetching from the server\n   * @return {Response}       - A 503 Service Unavailable response\n   */\n  fetchFailure(error) {\n    this.debug && console.log(error);\n    return new Response('<h1>Service Unavailable</h1>', {\n      status: 503,\n      statusText: 'Service Unavailable',\n      headers: new Headers({\n        'Content-Type': 'text/html'\n      })\n    });\n  }\n\n  /**\n   * Rewrites the fetched response when necessary.\n   * Potential uses are to fix certain replay issues, adding an archival banner, or modifying hyperlinks.\n   * When the showBanner config is set to true, it tries to add a banner in navigational HTML pages.\n   * Resolves to a potentially modified response.\n   *\n   * @param  {Response}          response - Original response object\n   * @param  {FetchEvent}        event    - The fetch event\n   * @return {Promise<Response>}          - Potentially modified response\n   */\n  rewrite(response, event) {\n    // TODO: Make necessary changes in the response\n    if (/text\\/html/i.test(response.headers.get('Content-Type'))) {\n      let headers = this.cloneHeaders(response.headers);\n      let init = {\n        status: response.status,\n        statusText: response.statusText,\n        headers: headers\n      };\n      return response.text().then(body => {\n        const [datetime] = this.extractDatetimeUrir(response.url);\n        // Replace all absolute URLs in src and href attributes of <iframe> and <a> elements with corresponding URI-Ms to avoid replay and navigation issues.\n        body = body.replace(this._regexps.absoluteReference, `$1${this.urimPattern.replace('<datetime>', datetime).replace('<urir>', '$4')}$5`);\n        // Inject a banner only on navigational HTML pages when showBanner config is set to true.\n        if (this.showBanner && event.request.mode === 'navigate') {\n          const banner = this.createBanner(response, event);\n          // Try to inject the banner markup before closing </body> tag, fallback to </html>.\n          // If none of the two closing tags are found, append it to the body.\n          if (this._regexps.bodyEnd.test(body)) {\n            body = body.replace(this._regexps.bodyEnd, banner+'</$1>');\n          } else {\n            body += banner;\n          }\n        }\n        return new Response(body, init);\n      });\n    }\n    return Promise.resolve(response);\n  }\n\n  /**\n   * Creates a string representing an HTML block to be injected in the response's HTML body.\n   *\n   * @param  {Response}   response - Original response object\n   * @param  {FetchEvent} event    - The fetch event\n   * @return {string}              - The banner markup\n   */\n  createBanner(response, event) {\n    const [datetime, urir] = this.extractDatetimeUrir(response.url);\n    return `<script src=\"${this.bannerElementLocation}\"></script>\n            <reconstructive-banner urir=\"${urir}\" datetime=\"${datetime}\"></reconstructive-banner>`;\n  }\n\n  /**\n   * The callback function on the fetch event.\n   * Logs the fetch event for debugging.\n   * Checks for any rerouting exclusions.\n   * If the request URL is a URI-M then creates a new request with certain modifications in the original request and fetches it from the server.\n   * Otherwise, responds with a redirect to the potential URI-M.\n   * Both success and failure responses are dealt with appropriately.\n   *\n   * @param {FetchEvent} event - The fetch event\n   */\n  reroute(event) {\n    this.debug && console.log('Rerouting requested', event);\n    // Let the browser deal with the requests if it matches a rerouting exclusion.\n    if (this.shouldExclude(event)) return;\n    // This condition will match if the request URL is not a URI-M.\n    if (this._regexps.urimPattern.test(event.request.url)) {\n      let request = this.createRequest(event);\n      event.respondWith(\n        fetch(request)\n          .then(response => this.fetchSuccess(response, event))\n          .catch(this.fetchFailure)\n      );\n    } else {\n      let urim = this.createUrim(event);\n      event.respondWith(this.localRedirect(urim));\n    }\n  }\n\n}\n",
    "static": true,
    "longname": "/src/Reconstructive/reconstructive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "class",
    "name": "Reconstructive",
    "memberof": "Reconstructive/reconstructive.js",
    "static": true,
    "longname": "Reconstructive/reconstructive.js~Reconstructive",
    "access": "public",
    "export": false,
    "importPath": "Reconstructive/Reconstructive/reconstructive.js",
    "importStyle": null,
    "description": "[Reconstructive](https://github.com/oduwsdl/reconstructive) is a ServiceWorker module for client-side reconstruction of composite mementos.\nIt reroutes embedded resource requests to their appropriate archival version without any URL rewriting.\nIt also provides functionality to add custom archival banners or rewrite hyperlinks on the client-side.",
    "lineNumber": 12,
    "version": "  0.5.0",
    "unknown": [
      {
        "tagName": "@overview",
        "tagValue": " Reconstructive is a module to be used in a ServiceWorker of an archival replay."
      },
      {
        "tagName": "@author",
        "tagValue": "   Sawood Alam <ibnesayeed@gmail.com>"
      },
      {
        "tagName": "@license",
        "tagValue": "  MIT"
      },
      {
        "tagName": "@copyright",
        "tagValue": "ODU Web Science / Digital Libraries Research Group 2017"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 67,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#constructor",
    "access": "public",
    "description": "Creates a new Reconstructive instance with optional configurations.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "{id: string, urimPattern: string, bannerElementLocation: string, showBanner: boolean, debug: boolean}"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "Configuration options"
      }
    ]
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "NAME",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#NAME",
    "access": "public",
    "description": "Name of the module.\nTreated as a constant.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "VERSION",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#VERSION",
    "access": "public",
    "description": "Version of the module.\nTreated as a constant.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "id",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#id",
    "access": "public",
    "description": "Identifier of the module, sent to the server as X-ServiceWorker header.\nDefaults to the name and version of the module.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "urimPattern",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#urimPattern",
    "access": "public",
    "description": "The format of URI-Ms (e.g., http://example.com/archive/<datetime>/<urir>).",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "bannerElementLocation",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#bannerElementLocation",
    "access": "public",
    "description": "The URL or absolute path of the JS file that defines custom banner element.\nOnly necessary if showBanner is set to true.",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "showBanner",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#showBanner",
    "access": "public",
    "description": "Whether or not to show an archival banner.\nDefaults to false.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "debug",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#debug",
    "access": "public",
    "description": "Whether or not to show debug messages in the console.\nDefaults to false.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "[k]",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#[k]",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "_regexps",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#_regexps",
    "access": "private",
    "description": "A private object with varius RegExp properties (possibly derived from other properties) for internal use.",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "{urimPattern: RegExp, absoluteReference: RegExp, bodyEnd: RegExp}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "exclusions",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#exclusions",
    "access": "public",
    "description": "An object of functions to check whether the request should be excluded from being rerouted.\nAdd more members to the object to add more exclusions or modify/delete existing ones.\nThe property name can be anything descriptive of the particular exclusion, which will be shown in debug logs.\nEach member function is called with the fetch event as parameters.\nIf any member returns true, the fetch event is excluded from being rerouted.",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "{notGet: function(event: FetchEvent): boolean, bannerElement: function(event: FetchEvent): boolean, localResource: function(event: FetchEvent): boolean}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "shouldExclude",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#shouldExclude",
    "access": "public",
    "description": "Iterates over all the members of the exclusions object and returns true if any of the members return true, otherwise returns false.\nLogs the first matching exclusion for debugging, if any.",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "FetchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The fetch event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Should the request be rerouted?"
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "createUrim",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#createUrim",
    "access": "public",
    "description": "Creates a potential URI-M based on the requested URL and the referrer URL for request rerouting.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "FetchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The fetch event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A potential URI-M"
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "extractDatetimeUrir",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#extractDatetimeUrir",
    "access": "public",
    "description": "Extracts datetime and URI-R from a URI-M.",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "urim",
        "description": "A URI-M"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "An array of datetime and URI-R"
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "createRequest",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#createRequest",
    "access": "public",
    "description": "Creates a new request based on the original.\nCopies all the headers from the original request.\nAdds X-ServiceWorker header with the id of the module.\nSets the redirect mode to manual to ensure proper origin boundaries.",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "FetchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The fetch event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Request"
      ],
      "spread": false,
      "description": "A new request object"
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "cloneHeaders",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#cloneHeaders",
    "access": "public",
    "description": "Clones provided request or response headers.",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "Headers"
        ],
        "spread": false,
        "optional": false,
        "name": "original",
        "description": "Original request or response headers"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Headers"
      ],
      "spread": false,
      "description": "A clone of the supplied headers"
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "localRedirect",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#localRedirect",
    "access": "public",
    "description": "Redirects a non-URI-M request to its potentially URI-M locally.\nThe potential URI-M is generated using createUrim().\nThis function only returns a synthetic redirection response.",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "urim",
        "description": "A potential URI-M"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Response>"
      ],
      "spread": false,
      "description": "A 302 redirection response to the potential URI-M"
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "fetchSuccess",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#fetchSuccess",
    "access": "public",
    "description": "The callback function on a successful fetch from the server.\nCalls the rewrite() function if the response code is 2xx.\nLogs the response for debugging.\nResolves to a potentially modified response.",
    "lineNumber": 230,
    "params": [
      {
        "nullable": null,
        "types": [
          "Response"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": "Original response object"
      },
      {
        "nullable": null,
        "types": [
          "FetchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The fetch event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Response>"
      ],
      "spread": false,
      "description": "Potentially modified response"
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "fetchFailure",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#fetchFailure",
    "access": "public",
    "description": "The callback function on network failure of the server fetch.\nLogs the failure reason for debugging.\nReturns a synthetic 503 Service Unavailable response.",
    "lineNumber": 247,
    "params": [
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "The exception raised on fetching from the server"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Response"
      ],
      "spread": false,
      "description": "A 503 Service Unavailable response"
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "rewrite",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#rewrite",
    "access": "public",
    "description": "Rewrites the fetched response when necessary.\nPotential uses are to fix certain replay issues, adding an archival banner, or modifying hyperlinks.\nWhen the showBanner config is set to true, it tries to add a banner in navigational HTML pages.\nResolves to a potentially modified response.",
    "lineNumber": 268,
    "params": [
      {
        "nullable": null,
        "types": [
          "Response"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": "Original response object"
      },
      {
        "nullable": null,
        "types": [
          "FetchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The fetch event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Response>"
      ],
      "spread": false,
      "description": "Potentially modified response"
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "createBanner",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#createBanner",
    "access": "public",
    "description": "Creates a string representing an HTML block to be injected in the response's HTML body.",
    "lineNumber": 305,
    "params": [
      {
        "nullable": null,
        "types": [
          "Response"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": "Original response object"
      },
      {
        "nullable": null,
        "types": [
          "FetchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The fetch event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The banner markup"
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "reroute",
    "memberof": "Reconstructive/reconstructive.js~Reconstructive",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "Reconstructive/reconstructive.js~Reconstructive#reroute",
    "access": "public",
    "description": "The callback function on the fetch event.\nLogs the fetch event for debugging.\nChecks for any rerouting exclusions.\nIf the request URL is a URI-M then creates a new request with certain modifications in the original request and fetches it from the server.\nOtherwise, responds with a redirect to the potential URI-M.\nBoth success and failure responses are dealt with appropriately.",
    "lineNumber": 321,
    "params": [
      {
        "nullable": null,
        "types": [
          "FetchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The fetch event"
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# Reconstructive\n\nTraditionally, web archival replay systems rewrite link and resource references in HTML/CSS/JavaScript responses so that they resolve to their corresponding archival version.\nFailure to do so would result in a broken rendering of archived pages (composite mementos) as the embedded resource references might resolve to their live version or an invalid location.\nWith the growing use of JavaScript in web applications, often resources are injected dynamically, hence rewriting such references is not possible from the server side.\nTo mitigate this issue, some JavaScript is injected in the page that overrides the global namespace to modify the DOM and monitor every network activity.\nWe proposed a ServiceWorker-based solution to this issue that requires no server-side rewriting, but catches every network request, even those that were initiated due to dynamic resource injection.\n\nReconstructive is a [ServiceWorker](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) module for client-side reconstruction of composite [mementos](https://tools.ietf.org/html/rfc7089) by rerouting resource requests to corresponding archived copies.\nThis is an implementation of a [published research paper](http://www.cs.odu.edu/~mln/pubs/jcdl-2017/jcdl-2017-alam-service-worker.pdf).\nThis can be used in archival replay systems such as [IPWB](https://github.com/oduwsdl/ipwb) or in the UI of memento aggregators such as [MemGator](https://github.com/oduwsdl/memgator).\n\nThe following figure illustrates an example where an external image reference in an archived web page would have leaked to the live-web, but due to the presence of Reconstructive, it was successfully rerouted to the corresponding archived copy instead.\n\n![Reconstructive Example](resources/reconstructive-example.png)\n\nRead our introductory blog post [Introducing Reconstructive - An Archival Replay ServiceWorker Module](http://ws-dl.blogspot.com/2018/01/2018-01-08-introducing-reconstructive.html) for more details.\n\n## Getting Started\n\nAssuming that your ServiceWorker script (e.g., `serviceworker.js`) is already registered, add the following lines in that script.\n\n```js\nimportScripts('https://oduwsdl.github.io/Reconstructive/reconstructive.js');\nconst rc = new Reconstructive();\nself.addEventListener('fetch', rc.reroute);\n```\n\nThis will start monitoring every request originated from its scope and reroute them to their appropriate mementos at `/memento/<datetime>/<urir>` as necessary.\nHowever, the default rerouting might not work for every archival replay system.\nSo, Reconstructive allows customization to fit to different needs.\n\n## Configuration and Customization\n\nWhen the script is imported, it provides a class named `Reconstructive`.\nAn instance from this class can be created with various configuration options.\nThe instance has following public members:\n\n* `exclusions`   - Object of rerouting exclusion functions.\n* `reroute`      - Callback function to be bound on fetch event.\n* `rewrite`      - Function to rewrite response to fix any replay issues and add an archival banner.\n* `createBanner` - Function to return the banner markup to the `rewrite` function.\n\n### Update Configurations\n\nThe `constructor` method of the `Reconstructive` class accepts an object that allows overwriting default configuration options and adding new members as necessary.\nFollowing are the default options:\n\n```js\n{\n  id: `${NAME}:${VERSION}`,\n  urimPattern: `${self.location.origin}/memento/<datetime>/<urir>`,\n  bannerElementLocation: `${self.location.origin}/reconstructive-banner.js`,\n  showBanner: false,\n  debug: false\n}\n```\n\nTo instantiate an object `rc` with custom configurations, initialize as following:\n\n```js\nconst rc = new Reconstructive({\n  urimPattern: `${self.location.origin}/archived/<datetime>/<urir>`,\n  bannerElementLocation: 'https://oduwsdl.github.io/Reconstructive/reconstructive-banner.js',\n  showBanner: true,\n  debug: true,\n  customColor: '#0C383B'\n});\n```\n\nWe have updated four existing options and added a new one, `customColor`, which we can use later in our custom logic.\n\n### Adding Exclusions\n\nThe `exclusions` property of the class is an object of functions.\nEach member of this object checks for certain criteria and returns a boolean to express whether or not the fetch event should be excluded from being rerouted.\nFollowing is the default exclusions object.\n\n```js\n{\n  notGet: event => event.request.method !== 'GET',\n  bannerElement: event => this.showBanner && event.request.url.endsWith(this.bannerElementLocation),\n  localResource: event => !(this._regexps.urimPattern.test(event.request.url) || this._regexps.urimPattern.test(event.request.referrer))\n}\n```\n\nAdd more members to the object to add more exclusions or modify/delete existing ones.\n\n```js\nrc.exclusions.bannerLogo = event => event.request.url.endsWith('replay-banner-logo.png');\n```\n\nWe have added a new exclusion named `bannerLogo` which will return `true` if the requested URL ends with `replay-banner-logo.png`.\nThis exclusion will ensure that the request will not be routed to an archived version of the logo.\nIn a practical application such exclusion rules should be kept very tight to avoid any false positives.\n\n### Custom Rerouting\n\nReconstructive does not register itself as a ServiceWorker, instead it is added as a module to an existing ServiceWorker for archival replay rerouting logic.\nHence, it is possible to have some custom ServiceWorker logic in place while selectively calling `reroute()` function on some requests.\n\n```js\nself.addEventListener('fetch', function(event) {\n  if (event.requests.url.startsWith('https://example.com/api/')) {\n    event.respondWith(fetch(event.request, {\n      mode: 'cors'\n    }));\n  } else {\n    rc.reroute(event);\n  }\n});\n```\n\n### Custom Rewriting\n\nReconstructive has a `rewrite()` method that tries to make necessary changes in the HTML pages to fix some common replay issues and changes hyperlinks to their archival context.\nHowever, there might be times when you need some custom rewriting logic in your archival replay system.\nTo accomplish this either override the `rewrite()` method of the instance or extend the `Reconstructive` class with an updated `rewrite()` method.\nThe method is called with original `response` and `event` objects and returns a `Promise` that resolves to a `Response` object.\nWe are illustrating the first approach below.\n\n```js\nconst customRewrite = (response, event) => {\n  let customResponse = new Response();\n  // Do something with the original response to create a custom response.\n  return customResponse;\n};\nrc.rewrite = customRewrite;\n```\n\n**Note:** When overriding a method of a class instance the context of `this` inside the custom function could be different (use the instance name e.g., `rc` in place of `this` instead).\n\n### Custom Banner\n\nReconstructive has a `createBanner()` method that creates a banner markup using [Web Components](https://www.webcomponents.org/).\nThis markup is then injected into navigational HTML pages by the `rewrite()` method if the `showBanner` configuration option is set to `true`.\nHowever, the default banner might not be suitable for every archival replay system.\nThis can be updated by overriding the `createBanner()` method the same way as described above for the `rewrite()` method.\nNote that the banner is included by the built-in `rewrite()` method, which if overriden, may not include the banner unless `createBanner()` is called by the `customRewrite()` too.\n\n```js\nconst customCreateBanner = (response, event) => {\n  return `<custom-replay-banner background=\"${rc.customColor}\"></custom-replay-banner>`;\n};\nrc.createBanner = customCreateBanner;\n```\n\nAs an aside, we used `rc.customColor` here that was an additional configuration option we supplied at the instance initialization.\n\n## How it Works?\n\nIn order to reroute requests to the URI of a potential archived copy (also known as Memento URI or URI-M) Reconstructive needs the request URL and the referrer URL, of which the latter must be a URI-M.\nIt extracts the datetime and the original URI (or URI-R) of the referrer then combines them with the request URL as necessary to construct a potential URI-M for the request to be rerouted to.\nIf the request URL is already a URI-M, it simply adds a custom request header `X-ServiceWorker` and fetches the response from the server.\nWhen necessary, the response is rewritten on the client-side to fix some quirks to make sure that the replay works as expected or to optionally add an archival banner.\nThe following flowchart diagram shows what happens in every request/response cycle of a fetch event in Reconstructive.\n\n![Reconstructive Flowchart](resources/reconstructive-flowchart.png)\n",
    "longname": "/src/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"Reconstructive\",\n  \"version\": \"0.5.0\",\n  \"repository\": \"https://github.com/oduwsdl/Reconstructive\",\n  \"author\": \"Sawood Alam <ibnesayeed@gmail.com>\",\n  \"contributors\": [\n    \"John Berlin <n0tan3rd@gmail.com>\"\n  ],\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-external-ecmascript-plugin\": \"^1.0.0\",\n    \"esdoc-external-webapi-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"serve\": \"^9.2.0\"\n  },\n  \"scripts\": {\n    \"docs\": \"mkdir -p Reconstructive && cp reconstructive.js reconstructive-banner.js Reconstructive && esdoc && rm -rf Reconstructive && cp -r resources docs/\",\n    \"dev\": \"serve .\"\n  }\n}\n",
    "longname": "/src/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]